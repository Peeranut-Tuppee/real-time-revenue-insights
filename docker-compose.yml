# Docker Compose for Transaction Pipeline System
# Usage: docker-compose up -d

version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15
    container_name: transaction_postgres
    environment:
      POSTGRES_DB: transaction_db
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - transaction_network

  # Zookeeper for Kafka
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: transaction_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - transaction_network

  # Kafka
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: transaction_kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    networks:
      - transaction_network

  # Kafka UI (Optional - for monitoring)
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: transaction_kafka_ui
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    networks:
      - transaction_network

  # Redis for caching (Optional)
  redis:
    image: redis:7-alpine
    container_name: transaction_redis
    ports:
      - "6379:6379"
    networks:
      - transaction_network

  # Data Pipeline Service
  pipeline:
    build: .
    container_name: transaction_pipeline
    depends_on:
      - postgres
      - kafka
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=transaction_db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
    volumes:
      - ./logs:/app/logs
    networks:
      - transaction_network
    restart: unless-stopped

  # API Service
  api:
    build: .
    container_name: transaction_api
    depends_on:
      - postgres
    ports:
      - "5000:5000"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=transaction_db
      - DB_USER=postgres
      - DB_PASSWORD=password
    command: python api_server.py
    networks:
      - transaction_network
    restart: unless-stopped

  # Streamlit Dashboard
  dashboard:
    build: .
    container_name: transaction_dashboard
    depends_on:
      - postgres
      - api
    ports:
      - "8501:8501"
    environment:
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_NAME=transaction_db
      - DB_USER=postgres
      - DB_PASSWORD=password
      - API_BASE_URL=http://api:5000/api
    command: streamlit run dashboard.py --server.address 0.0.0.0
    networks:
      - transaction_network
    restart: unless-stopped

volumes:
  postgres_data:

networks:
  transaction_network:
    driver: bridge
  